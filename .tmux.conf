set-option -g alternate-screen on
set-option -g default-terminal xterm-256color

set-option -g prefix C-a
bind a send-prefix

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

unbind |
bind | split-window -h  -c "#{pane_current_path}" \; select-layout even-horizontal
bind _ split-window -v  -c "#{pane_current_path}"

bind-key -n M-1 select-layout even-vertical
bind-key -n M-2 select-layout even-horizontal
bind-key -n M-3 select-layout main-horizontal
bind-key -n M-4 select-layout main-vertical
bind-key -n M-5 select-layout tiled

set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

colour_main="colour14"
colour_main_dark="colour6"
colour_grey="colour234"

set-option  -g status-left                  '#(homux "#{pane_current_path}")'
set-option  -g status-right                 '#(gitmux "#{pane_current_path}") %a, %d %b %Y %T %Z'
set-option  -g status-right                 '#(gitmux "#{pane_current_path}")'

set-option  -g status-justify               absolute-centre
set-option  -g status-left-length           90
set-option  -g status-right-length          90

set-option  -g status-style                 fg="$colour_main",bg="$colour_grey"

# Window list inactive
set-option  -g window-status-style			fg="$colour_main",bg=default,dim
set-option  -g window-status-format         ' #I:#F:#W '

set-option  -g pane-active-border-style     fg="$colour_main_dark",bg=default
set-option  -g pane-border-style            fg="$colour_grey",bg=default

set-option  -g message-style                fg=colour16,bg="$colour_main_dark",bold

# Window list active
set-option  -g window-status-current-style  fg=colour16,bg="$colour_main",bold
set-option  -g window-status-current-format ' #I:#F:#W '

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-a last-window

# source .tmux.conf as suggested in `man tmux`
bind R source-file "~/.tmux.conf"

bind A resize-window -A

# set-hook -g window-pane-changed 'select-layout even-horizontal'

# # List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-sensible'

# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
